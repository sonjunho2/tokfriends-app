name: Android Preview (APK, Dev)

on:
  workflow_dispatch: {}

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

jobs:
  android-preview:
    runs-on: ubuntu-latest

    # 앱이 레포 루트가 아닐 경우(예: apps/mobile) 여기 경로를 바꾸세요.
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps
        run: npm install

      - name: Install EAS CLI
        run: npm i -g eas-cli@latest

      - name: Expo login (token)
        run: eas whoami || eas login --token ${{ secrets.EXPO_TOKEN }}

      # ✅ heredoc 없이 안전하게 eas.json 생성/보강
      - name: Ensure eas.json (preview profile)
        run: |
          node -e "const fs=require('fs'); const path='eas.json'; if(!fs.existsSync(path)){ const cfg={cli:{version: '>= 3.20.0'}, build:{ preview:{android:{buildType:'apk', developmentClient:true}}, apk:{android:{buildType:'apk'}}, production:{android:{buildType:'app-bundle'}} }}; fs.writeFileSync(path, JSON.stringify(cfg,null,2)); console.log('eas.json created'); } else { console.log('eas.json exists'); }"

      - name: Build Android (preview)
        run: eas build -p android --profile preview --non-interactive --wait

      - name: Download APK
        run: eas build:download --latest --platform android --path ddakchin-preview.apk

      - name: Upload artifact
        uses: actions/upload-art
